version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    tty: true
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
      # SERVICE_NAME: app
      # SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - db
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
      - "443:443"
    depends_on:
      - db
      - app
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: laravel-booking
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_PASSWORD: 123456
      MYSQL_USER: laravel-booking
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # Phpmyadmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    # environment:
    #   PMA_HOST: db
    #   MYSQL_ROOT_PASSWORD: your_mysql_root_password
    #   PMA_PORT: 3306
    restart: always
    ports:
      - 8085:80
    depends_on:
      - db
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local